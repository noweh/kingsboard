name: Deploy Laravel Project

on:
  push:
    branches:
      - master

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up PHP
      uses: shivammathur/setup-php@v2
      with:
        php-version: '8.2'
        extensions: mbstring, xml, curl, zip, gd, bcmath # Add necessary PHP extensions
        tools: composer

    - name: Set working directory to project
      run: cd project

    # Create an empty SQLite database file to prevent errors during package discovery
    - name: Create dummy database file for CI
      working-directory: ./project
      run: |
        mkdir -p database
        touch database/database.sqlite

    - name: Install Composer dependencies
      working-directory: ./project
      run: composer install --optimize-autoloader --no-dev --no-interaction --no-progress

    # ---- Start of deployment section (adapt as needed) ----

    # Option 1: Deploy via rsync using SSH with password authentication
    - name: Deploy using rsync (SSH with Password)
      uses: appleboy/ssh-action@v1.0.3
      with:
        host: ${{ secrets.REMOTE_HOST }}
        username: ${{ secrets.REMOTE_USER }}
        password: ${{ secrets.SSH_PASSWORD }}
        # port: 22 # Default SSH port
        script: |
          rsync -rlgoDzvc -i --delete \
          --exclude='/storage/' \
          --exclude='/vendor/' \
          --exclude='.env' \
          --exclude='.git/' \
          --exclude='.github/' \
          ./project/ ${{ secrets.TARGET_DIRECTORY }}/current/

    # ---- End of deployment section ----

    # Optional: Create required symlinks (e.g., for .env, storage)
    - name: Create .env symlink
      uses: appleboy/ssh-action@v1.0.3
      with:
        host: ${{ secrets.REMOTE_HOST }}
        username: ${{ secrets.REMOTE_USER }}
        password: ${{ secrets.SSH_PASSWORD }} # Use password authentication
        # key: ${{ secrets.SSH_PRIVATE_KEY }}
        script: |
          echo "Creating symlink for .env file"
          # Remove existing .env file or link in current if it exists
          rm -f ${{ secrets.TARGET_DIRECTORY }}/current/.env
          # Create the symlink: target -> source
          ln -snf ${{ secrets.TARGET_DIRECTORY }}/shared/.env ${{ secrets.TARGET_DIRECTORY }}/current/.env
          echo "Symlink created"
          # Add other symlinks if needed (e.g., for storage)
          # echo "Linking storage directory"
          # rm -rf ${{ secrets.TARGET_DIRECTORY }}/current/storage
          # ln -snf ${{ secrets.TARGET_DIRECTORY }}/shared/storage ${{ secrets.TARGET_DIRECTORY }}/current/storage

    # Optional: Run migrations and other post-deployment commands (via SSH)
    # Ensure the SSH key has the necessary permissions
    - name: Run post-deployment commands
      uses: appleboy/ssh-action@v1.0.3
      with:
        host: ${{ secrets.REMOTE_HOST }}
        username: ${{ secrets.REMOTE_USER }}
        password: ${{ secrets.SSH_PASSWORD }} # Use password authentication
        # key: ${{ secrets.SSH_PRIVATE_KEY }}
        script: |
          echo "Running post-deployment commands in target directory"
          cd ${{ secrets.TARGET_DIRECTORY }}/current # CD into the 'current' directory
          php artisan migrate --force
          php artisan optimize:clear # Or other commands like cache:clear, config:cache, etc.
          # php artisan queue:restart # If you use queues 